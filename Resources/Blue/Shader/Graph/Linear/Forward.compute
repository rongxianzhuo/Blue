#pragma kernel CSMain

uint total_thread_x;
uint total_thread_y;
uint total_thread_z;

uint input_count;
StructuredBuffer<float> input_layer;
StructuredBuffer<float> weight;
StructuredBuffer<float> bias;
RWStructuredBuffer<float> output;

[numthreads(64, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= total_thread_x) return;
    float o = 0.0;
    const uint offset = id.x * input_count;
    for (uint i = 0; i < input_count; i++)
    {
        o += input_layer[i] * weight[offset + i];
    }
    o += bias[id.x];
    output[id.x] = o;
}