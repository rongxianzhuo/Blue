#pragma kernel CSMain

float t;
float beta1;
float beta2;
float weight_decay;
float learning_rate;
StructuredBuffer<float> g;
RWStructuredBuffer<float> m;
RWStructuredBuffer<float> v;
RWStructuredBuffer<float> theta;

[numthreads(64, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    const float weight_decay_g = g[id.x] + theta[id.x] * weight_decay;
    float cm = beta1 * m[id.x] + (1.0 - beta1) * weight_decay_g;
    m[id.x] = cm;
    float cv = beta2 * v[id.x] + (1.0 - beta2) * weight_decay_g * weight_decay_g;
    v[id.x] = cv;
    // 加 abs 只是为了避免unity警告
    cm = cm/ (1.0 - pow(abs(beta1), t));
    cv = cv/ (1.0 - pow(abs(beta2), t));
    theta[id.x] = theta[id.x] - learning_rate * cm / (sqrt(cv) + 1e-08);
}