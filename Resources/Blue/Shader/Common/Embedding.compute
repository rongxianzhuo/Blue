#pragma kernel Forward
#pragma kernel Backward

int len;
int dim;
StructuredBuffer<int> indices;
StructuredBuffer<float> weight;
StructuredBuffer<float> output_gradient;
RWStructuredBuffer<float> output;
RWStructuredBuffer<float> weight_gradient;

[numthreads(64, 1, 1)]
void Forward(uint3 id : SV_DispatchThreadID)
{
    for (int i = 0; i < dim; i++)
    {
        output[id.x * dim + i] = weight[indices[id.x] * dim + i];
    }
}

[numthreads(64, 1, 1)]
void Backward(uint3 id : SV_DispatchThreadID)
{
    const int i = id.x / dim;
    const int j = id.x % dim;
    for (int k = 0; k < len; k++)
    {
        if (indices[k] == i) weight_gradient[id.x] += output_gradient[k * dim + j];
    }
    weight_gradient[id.x] /= len;
}