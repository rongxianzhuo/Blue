#pragma kernel CSMain
#include "../Common.cginc"

uint n;
uint dim;
float beta;

StructuredBuffer<float> output;
StructuredBuffer<uint> output_stride;

StructuredBuffer<float> target;
StructuredBuffer<uint> target_stride;

RWStructuredBuffer<float> gradient;
StructuredBuffer<uint> gradient_stride;

[numthreads(512, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    const uint2 new_id = calculate_new_index(dim, id.x, gradient_stride, output_stride, target_stride);
    const float x = output[new_id.x];
    const float y = target[new_id.y];
    if (abs(x - y) < beta) gradient[id.x] = (x - y) / beta / n;
    else gradient[id.x] = 1.0 / n;
}